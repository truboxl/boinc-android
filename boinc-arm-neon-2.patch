diff --git a/client/Makefile.am b/client/Makefile.am
index 8f5c8b9be..0b33f52eb 100644
--- a/client/Makefile.am
+++ b/client/Makefile.am
@@ -118,9 +118,14 @@ EXTRA_boinc_client_DEPENDENCIES = libwhetneon.a libwhetvfp.a
 boinc_client_LDADD += libwhetneon.a libwhetvfp.a
 noinst_LIBRARIES = libwhetneon.a libwhetvfp.a
 libwhetneon_a_SOURCES = whetstone.cpp
-libwhetneon_a_CXXFLAGS = $(boinc_client_CXXFLAGS) -DARM_NEON -mfloat-abi=softfp -mfpu=neon
 libwhetvfp_a_SOURCES = whetstone.cpp
+if !OS_LINUX_ARMHF
+libwhetneon_a_CXXFLAGS = $(boinc_client_CXXFLAGS) -DARM_NEON -mfloat-abi=softfp -mfpu=neon
 libwhetvfp_a_CXXFLAGS = $(boinc_client_CXXFLAGS) -DARM_VFP -mfloat-abi=softfp -mfpu=vfp
+else
+libwhetneon_a_CXXFLAGS = $(boinc_client_CXXFLAGS) -DARM_NEON -march=armv7-a -mfloat-abi=hard -mfpu=neon
+libwhetvfp_a_CXXFLAGS = $(boinc_client_CXXFLAGS) -DARM_VFP -march=armv7-a -mfloat-abi=hard -mfpu=vfp
+endif
 endif
 if OS_LINUX_AARCH64
 EXTRA_boinc_client_DEPENDENCIES = libwhetneon.a
diff --git a/client/cpu_benchmark.h b/client/cpu_benchmark.h
index 775b8966b..a085a5d42 100644
--- a/client/cpu_benchmark.h
+++ b/client/cpu_benchmark.h
@@ -31,12 +31,14 @@ extern bool benchmark_time_to_stop(int which);
 
 // separate different compilations of whetstone.cpp which will utilize
 // various ARM fp features ie neon, vfp, or "normal"
+// add CXXFLAGS/CFLAGS for gcc:
+// arm    : -DARM_NEON -mfloat-abi=softfp -mfpu=neon
+//          -DARM_VFP -mfloat-abi=softfp -mfpu=vfp
+// armhf  : -DARM_NEON -march=armv7-a -mfloat-abi=hard -mfpu=neon
+//          -DARM_VFP -march=armv7-a -mfloat-abi=hard -mfpu=vfp
+// aarch64: -DARM_NEON -mfpu=neon
 #if defined(__arm__) || defined(__aarch64__)
 #ifdef __ARM_NEON
-// add CXXFLAGS/CFLAGS for gcc:
-// armv7a: -DARM_NEON -mfloat-abi=softfp -mfpu=neon
-//         -DARM_VFP -mfloat-abi=softfp -mfpu=vfp
-// armv8a: -DARM_NEON -mfpu=neon
 #include <arm_neon.h>
 #endif // __ARM_NEON
 
@@ -48,6 +50,6 @@ namespace arm_neon {
 namespace arm_vfp {
     int whetstone(double& flops, double& cpu_time, double min_cpu_time);
 }
-#endif
+#endif // defined(__arm__)
 
 #endif // defined(__arm__) || defined(__aarch64__)
diff --git a/configure.ac b/configure.ac
index 686980fd4..d64f033fb 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1054,11 +1054,12 @@ AM_CONDITIONAL(OS_OS2, [echo $host_os | grep '^os2' > /dev/null])
 dnl Cross compile for (and native compile on) ARM
 dnl Enable NEON in benchmark
 AM_CONDITIONAL(OS_LINUX_ARM,
-[$(echo $host_alias | grep '^arm-linux' > /dev/null) || \
-$($(echo $host_cpu | grep '^arm' > /dev/null) && $(echo $host_os | grep '^linux' > /dev/null))])
+[$(echo $host_cpu | grep '^arm' > /dev/null) && $(echo $host_os | grep '^linux' > /dev/null)])
+AM_CONDITIONAL(OS_LINUX_ARMHF,
+[$(echo $host_cpu | grep '^arm' > /dev/null) && $(echo $host_os | grep '^linux.*hf' > /dev/null) || \
+$(echo $host_cpu | grep '^armv7hl' > /dev/null) && $(echo $host_os | grep '^linux' > /dev/null)])
 AM_CONDITIONAL(OS_LINUX_AARCH64,
-[$(echo $host_alias | grep '^aarch64-linux' > /dev/null) || \
-$($(echo $host_cpu | grep '^aarch64' > /dev/null) && $(echo $host_os | grep '^linux' > /dev/null))])
+[$(echo $host_cpu | grep '^aarch64' > /dev/null) && $(echo $host_os | grep '^linux' > /dev/null)])
 
 dnl Whether to build fcgi components
 AM_CONDITIONAL(ENABLE_FCGI,[test "${enable_fcgi}" = yes])
