diff --git a/client/Makefile.am b/client/Makefile.am
index f39c45fe60..8f5c8b9be6 100644
--- a/client/Makefile.am
+++ b/client/Makefile.am
@@ -113,14 +113,21 @@ boinc_client_LDADD = $(LIBBOINC) $(LIBBOINC_CRYPT) $(BOINC_EXTRA_LIBS) $(PTHREAD
 
 boinc_clientdir = $(bindir)
 
-if OS_ARM_LINUX
+if OS_LINUX_ARM
+EXTRA_boinc_client_DEPENDENCIES = libwhetneon.a libwhetvfp.a
 boinc_client_LDADD += libwhetneon.a libwhetvfp.a
 noinst_LIBRARIES = libwhetneon.a libwhetvfp.a
 libwhetneon_a_SOURCES = whetstone.cpp
-libwhetneon_a_CXXFLAGS = $(boinc_client_CXXFLAGS) -DANDROID_NEON -mfloat-abi=softfp -mfpu=neon
-
+libwhetneon_a_CXXFLAGS = $(boinc_client_CXXFLAGS) -DARM_NEON -mfloat-abi=softfp -mfpu=neon
 libwhetvfp_a_SOURCES = whetstone.cpp
-libwhetvfp_a_CXXFLAGS = $(boinc_client_CXXFLAGS) -DANDROID_VFP -mfloat-abi=softfp -mfpu=vfp
+libwhetvfp_a_CXXFLAGS = $(boinc_client_CXXFLAGS) -DARM_VFP -mfloat-abi=softfp -mfpu=vfp
+endif
+if OS_LINUX_AARCH64
+EXTRA_boinc_client_DEPENDENCIES = libwhetneon.a
+boinc_client_LDADD += libwhetneon.a
+noinst_LIBRARIES = libwhetneon.a
+libwhetneon_a_SOURCES = whetstone.cpp
+libwhetneon_a_CXXFLAGS = $(boinc_client_CXXFLAGS) -DARM_NEON -mfpu=neon
 endif
 
 switcher_SOURCES = switcher.cpp
diff --git a/client/cpu_benchmark.h b/client/cpu_benchmark.h
index f20c182bed..775b8966bd 100644
--- a/client/cpu_benchmark.h
+++ b/client/cpu_benchmark.h
@@ -31,19 +31,23 @@ extern bool benchmark_time_to_stop(int which);
 
 // separate different compilations of whetstone.cpp which will utilize
 // various ARM fp features ie neon, vfp, or "normal"
-#ifdef ANDROID
-#ifdef ANDROID_NEON
-// add CXXFLAGS/CFLAGS for gcc:  -DANDROID_NEON -mfloat-abi=softfp -mfpu=neon
+#if defined(__arm__) || defined(__aarch64__)
+#ifdef __ARM_NEON
+// add CXXFLAGS/CFLAGS for gcc:
+// armv7a: -DARM_NEON -mfloat-abi=softfp -mfpu=neon
+//         -DARM_VFP -mfloat-abi=softfp -mfpu=vfp
+// armv8a: -DARM_NEON -mfpu=neon
 #include <arm_neon.h>
-#endif // ANDROID_NEON
+#endif // __ARM_NEON
 
-namespace android_neon {
+namespace arm_neon {
     int whetstone(double& flops, double& cpu_time, double min_cpu_time);
 }
 
-namespace android_vfp {
+#if defined(__arm__)
+namespace arm_vfp {
     int whetstone(double& flops, double& cpu_time, double min_cpu_time);
 }
+#endif
 
-#endif // ANDROID
-
+#endif // defined(__arm__) || defined(__aarch64__)
diff --git a/client/cs_benchmark.cpp b/client/cs_benchmark.cpp
index bc35972467..086a3c681a 100644
--- a/client/cs_benchmark.cpp
+++ b/client/cs_benchmark.cpp
@@ -176,20 +176,27 @@ int cpu_benchmarks(BENCHMARK_DESC* bdp) {
 
     bdp->error_str[0] = '\0';
 
-#if defined(ANDROID) && defined(__arm__)
+#if defined(__arm__)
     // check for FP accelerator: VFP, Neon, or none;
     // run the appropriate version of Whetstone
     // (separated using namespaces)
     //
-    if (strstr(gstate.host_info.p_features, " neon ")) { 
+    if (strstr(gstate.host_info.p_features, " neon ")) {
         // have ARM neon FP capabilities
-        retval = android_neon::whetstone(host_info.p_fpops, fp_time, MIN_CPU_TIME);
-    } else if (strstr(gstate.host_info.p_features, " vfp ")) { 
+        retval = arm_neon::whetstone(host_info.p_fpops, fp_time, MIN_CPU_TIME);
+    } else if (strstr(gstate.host_info.p_features, " vfp ")) {
         // have ARM vfp FP capabilities
-        retval = android_vfp::whetstone(host_info.p_fpops, fp_time, MIN_CPU_TIME);
+        retval = arm_vfp::whetstone(host_info.p_fpops, fp_time, MIN_CPU_TIME);
     } else { // just run normal test
         retval = whetstone(host_info.p_fpops, fp_time, MIN_CPU_TIME);
     }
+#elif defined(__aarch64__)
+    if (strstr(gstate.host_info.p_features, " asimd ")) {
+      // aarch64 shows asimd instead of neon
+      retval = arm_neon::whetstone(host_info.p_fpops, fp_time, MIN_CPU_TIME);
+    } else { // just run normal test
+      retval = whetstone(host_info.p_fpops, fp_time, MIN_CPU_TIME);
+    }
 #else
     retval = whetstone(host_info.p_fpops, fp_time, MIN_CPU_TIME);
 #endif
diff --git a/client/whetstone.cpp b/client/whetstone.cpp
index 4b066c3d28..cb13c5cdc5 100644
--- a/client/whetstone.cpp
+++ b/client/whetstone.cpp
@@ -40,14 +40,14 @@
 #define SPDP double
 #endif
 
-#ifdef ANDROID
-#ifdef ANDROID_NEON
-    namespace android_neon {
-#else
-  #ifdef ANDROID_VFP
-    namespace android_vfp {
+#if defined(__arm__) || defined(__aarch64__)
+  #ifdef ARM_NEON
+    namespace arm_neon {
+  #else
+  #ifdef ARM_VFP
+    namespace arm_vfp {
+  #endif
   #endif
-#endif
 #endif
 
 // External array; store results here so that optimizing compilers
@@ -290,6 +290,6 @@ int whetstone(double& flops, double& cpu_time, double min_cpu_time) {
     return 0;
 }
 
-#if defined(ANDROID_NEON) || defined(ANDROID_VFP)
+#if defined(ARM_NEON) || defined(ARM_VFP)
   }
 #endif // namespace closure
diff --git a/configure.ac b/configure.ac
index a80cf16044..686980fd4a 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1050,7 +1050,15 @@ AM_CONDITIONAL(OS_WIN32, [echo $host_os | egrep '^mingw|^winnt' > /dev/null])
 AM_CONDITIONAL(OS_WIN32_MINGW, [echo $host_os | grep '^mingw' > /dev/null])
 dnl or OS2
 AM_CONDITIONAL(OS_OS2, [echo $host_os | grep '^os2' > /dev/null])
-AM_CONDITIONAL(OS_ARM_LINUX, [echo $host_alias | grep '^arm-linux' > /dev/null])
+
+dnl Cross compile for (and native compile on) ARM
+dnl Enable NEON in benchmark
+AM_CONDITIONAL(OS_LINUX_ARM,
+[$(echo $host_alias | grep '^arm-linux' > /dev/null) || \
+$($(echo $host_cpu | grep '^arm' > /dev/null) && $(echo $host_os | grep '^linux' > /dev/null))])
+AM_CONDITIONAL(OS_LINUX_AARCH64,
+[$(echo $host_alias | grep '^aarch64-linux' > /dev/null) || \
+$($(echo $host_cpu | grep '^aarch64' > /dev/null) && $(echo $host_os | grep '^linux' > /dev/null))])
 
 dnl Whether to build fcgi components
 AM_CONDITIONAL(ENABLE_FCGI,[test "${enable_fcgi}" = yes])
diff --git a/m4/boinc_platform.m4 b/m4/boinc_platform.m4
index 437fcb6bb0..2840d36803 100644
--- a/m4/boinc_platform.m4
+++ b/m4/boinc_platform.m4
@@ -1,55 +1,69 @@
 AC_DEFUN([BOINC_PLATFORM],[
   AC_ARG_WITH([boinc-platform],
               AC_HELP_STRING([--with-boinc-platform],
-	                      [override the default boinc platform]),
-	      [boinc_platform="$withval"],
-	      [boinc_platform=])
+                             [override the default boinc platform]),
+                             [boinc_platform="$withval"],
+                             [boinc_platform=])
   AC_ARG_WITH([boinc-alt-platform],
               AC_HELP_STRING([--with-boinc-alt-platform],
-	                      [override the boinc alternate platform]),
-	      [boinc_alt_platform="$withval"],
-	      [boinc_alt_platform=])
+                             [override the boinc alternate platform]),
+                             [boinc_alt_platform="$withval"],
+                             [boinc_alt_platform=])
   AC_MSG_CHECKING([boinc platform])
   if test -z "${boinc_platform}" ; then
     boinc_platform=`echo $target | $SED -e 's/amd64/x86_64/' -e 's/portbld/pc/' -e 's/redhat/pc/' -e 's/x86_64-unknown/x86_64-pc/' -e 's/[[0-9]]$//' -e 's/[[0-9]]$//' -e 's/\.$//' -e 's/[[0-9]]$//' -e 's/\.$//' -e 's/[[0-9]]$//'`
     case "${boinc_platform}" in
       sparc-sun-solaris)
-    	if test "$COMPILER_MODEL_BITS" = "64" ; then
-	  boinc_platform=`echo $boinc_platform | $SED 's/sparc/sparc64/'`
-	  if test -z "$boinc_alt_platform" ; then
-	    boinc_alt_platform=sparc-sun-solaris
-	  fi
-	elif test -z "$boinc_alt_platform" ; then
-	    boinc_alt_platform=sparc-sun-solaris2.7
-	fi
+        if test "$COMPILER_MODEL_BITS" = "64" ; then
+          boinc_platform=`echo $boinc_platform | $SED 's/sparc/sparc64/'`
+          if test -z "$boinc_alt_platform" ; then
+            boinc_alt_platform=sparc-sun-solaris
+          fi
+        elif test -z "$boinc_alt_platform" ; then
+          boinc_alt_platform=sparc-sun-solaris2.7
+        fi
         ;;
       x86_64*linux-gnu)
         if test "$COMPILER_MODEL_BITS" = "32" ; then
-	  boinc_platform="i686-pc-linux-gnu"
-	elif test -z "$boinc_alt_platform" ; then
-	  boinc_alt_platform="i686-pc-linux-gnu"
-	fi
-	;;
+          boinc_platform="i686-pc-linux-gnu"
+        elif test -z "$boinc_alt_platform" ; then
+          boinc_alt_platform="i686-pc-linux-gnu"
+        fi
+        ;;
       powerpc-apple-darwin)
         if test "$COMPILER_MODEL_BITS" = "64" ; then
-	  boinc_platform="powerpc64-apple-darwin"
-	  if test -z "$boinc_alt_platform" ; then
-	    boinc_alt_platform="powerpc-apple-darwin"
-	  fi
-	fi
-	;;
+          boinc_platform="powerpc64-apple-darwin"
+          if test -z "$boinc_alt_platform" ; then
+            boinc_alt_platform="powerpc-apple-darwin"
+          fi
+        fi
+        ;;
       hppa*-hp-hpux*)
         if test "$COMPILER_MODEL_BITS" = "64" ; then
-	  boinc_platform="hppa64-hp-hpux"
-	  if test -z "${boinc_alt_platform}" ; then
-	    boinc_alt_platform="hppa-hp-hpux"
-	  fi
-	else
-	  boinc_platform="hppa-hp-hpux"
-	fi
+          boinc_platform="hppa64-hp-hpux"
+          if test -z "${boinc_alt_platform}" ; then
+            boinc_alt_platform="hppa-hp-hpux"
+          fi
+        else
+          boinc_platform="hppa-hp-hpux"
+        fi
         ;;
       ia64-hp-hpux*)
-	boinc_platform="ia64-hp-hpux"
+        boinc_platform="ia64-hp-hpux"
+        ;;
+      aarch64*linux-android)
+        boinc_platform='aarch64-android-linux-gnu'
+        boinc_alt_platform='arm-android-linux-gnu'
+        ;;
+      arm*linux-android*)
+        boinc_platform='arm-android-linux-gnu'
+        ;;
+      x86_64*linux-android)
+        boinc_platform='x86_64-android-linux-gnu'
+        boinc_alt_platform='x86-android-linux-gnu'
+        ;;
+      i686*linux-android)
+        boinc_platform='x86-android-linux-gnu'
         ;;
     esac
     case "${target}" in
@@ -58,11 +72,11 @@ AC_DEFUN([BOINC_PLATFORM],[
         ;;
       i*86-*-mingw32)
         boinc_platform="windows_intelx86"
-	;;
+      ;;
       x86_64-*-mingw32)
         boinc_platform="windows_x86_64"
-	boinc_alt_platform="windows_intelx86"
-	;;
+        boinc_alt_platform="windows_intelx86"
+      ;;
     esac
   fi
   AC_DEFINE_UNQUOTED([HOSTTYPE],"$boinc_platform",[Platform identification used to identify applications for this BOINC core client])
@@ -77,4 +91,3 @@ AC_DEFUN([BOINC_PLATFORM],[
      AC_MSG_RESULT(none)
   fi
 ])
-    
